{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fronc\\\\Documents\\\\Szko\\u0142a\\\\VII\\\\TIN\\\\UnderControl\\\\under_control\\\\src\\\\Private\\\\AddInspection.js\";\nimport React, { Component } from 'react';\nimport './AddTool.css';\nimport ReactDOM from \"react-dom\";\nimport Toolbox from \"./Toolbox\";\nimport Tool from \"../Models/Tool\";\n\nclass AddInspection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (!this.state.lastInspection) {\n        window.alert(\"Date field can't be empty!\");\n        return null;\n      }\n\n      if (this.state.lastInspection.length < 3) window.alert(\"Date field can't be empty!\");else {\n        let id = document.getElementById('toolIn').value;\n        let lastInspection = document.getElementById('lastInspectionIn').value;\n        let comment = document.getElementById('commentIn').value;\n        let status = document.getElementById('statusIn').value;\n        const myPost = {\n          id: id,\n          comment: comment,\n          lastInspection: lastInspection,\n          status: status,\n          owner: JSON.parse(localStorage.getItem('user')).Id\n        };\n        fetch('http://localhost:3003/addInspection', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Host': 'http://localhost:3003/addInspection',\n            'Origin': 'http://localhost:3000/'\n          },\n          body: JSON.stringify(myPost)\n        }).then(res => {\n          if (!res.ok) {\n            window.alert(\"ERROR: Inspection not added!\");\n          } else {\n            window.alert(\"New inspection added!\");\n            ReactDOM.render( /*#__PURE__*/_jsxDEV(Toolbox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), document.getElementById('Body'));\n          }\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    var items = [];\n    fetch(\"http://localhost:3003/\" + JSON.parse(localStorage.getItem('user')).Id).then(res => res.json()).then(result => {\n      result.forEach(item => {\n        items.push(new Tool(item.id, item.producer, item.model, item.category, item.comment, item.status, item.lastInspection, item.inspectionInterval, item.owner));\n      });\n      this.setState({\n        isLoaded: true,\n        items: items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Add-h1\",\n        children: \"Add new inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Add-form\",\n        onSubmit: this.mySubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toolIn\",\n          className: \"Add-lab\",\n          children: \"Choose tool:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"Add-in\",\n          id: \"toolIn\",\n          name: \"tool\",\n          onChange: this.myChangeHandler,\n          children: this.state.items.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: [item.id, \" \", item.producer, \" \", item.model]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lastInspectionField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastInspectionIn\",\n            className: \"Add-lab\",\n            children: \"Date of inspection (date format yyyy-MM-dd):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Add-in\",\n            id: \"lastInspectionIn\",\n            name: \"lastInspection\",\n            type: \"text\",\n            minLength: \"8\",\n            pattern: \"20[0-9][0-9]-[0-9][0-9]-[0-3][0-9]\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"commentIn\",\n            className: \"Add-lab\",\n            children: \"Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Add-in\",\n            id: \"commentIn\",\n            name: \"comment\",\n            type: \"text\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"statusIn\",\n          className: \"Add-lab\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"Add-in\",\n          id: \"statusIn\",\n          name: \"status\",\n          onChange: this.myChangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ok\",\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Requires Attention\",\n            children: \"Requires Attention\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Broken\",\n            children: \"Broken\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Add-in-submit\",\n          id: \"addIn\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddInspection;","map":{"version":3,"sources":["C:/Users/fronc/Documents/Szko≈Ça/VII/TIN/UnderControl/under_control/src/Private/AddInspection.js"],"names":["React","Component","ReactDOM","Toolbox","Tool","AddInspection","constructor","props","mySubmitHandler","event","preventDefault","state","lastInspection","window","alert","length","id","document","getElementById","value","comment","status","myPost","owner","JSON","parse","localStorage","getItem","Id","fetch","method","headers","body","stringify","then","res","ok","render","myChangeHandler","nam","target","name","val","setState","items","componentDidMount","json","result","forEach","item","push","producer","model","category","inspectionInterval","isLoaded","error","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddTool.css'\r\nimport ReactDOM from \"react-dom\";\r\nimport Toolbox from \"./Toolbox\";\r\nimport Tool from \"../Models/Tool\";\r\n\r\n\r\nclass AddInspection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var items = [];\r\n        fetch(\"http://localhost:3003/\" + JSON.parse(localStorage.getItem('user')).Id)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    result.forEach(item => {\r\n                        items.push(new Tool(\r\n                            item.id,\r\n                            item.producer,\r\n                            item.model,\r\n                            item.category,\r\n                            item.comment,\r\n                            item.status,\r\n                            item.lastInspection,\r\n                            item.inspectionInterval,\r\n                            item.owner\r\n                        ));\r\n                    })\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: items\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(!this.state.lastInspection){\r\n            window.alert(\"Date field can't be empty!\");\r\n            return null;\r\n        }\r\n        if(this.state.lastInspection.length < 3)\r\n            window.alert(\"Date field can't be empty!\");\r\n        else {\r\n            let id = document.getElementById('toolIn').value;\r\n            let lastInspection = document.getElementById('lastInspectionIn').value;\r\n            let comment = document.getElementById('commentIn').value;\r\n            let status = document.getElementById('statusIn').value;\r\n\r\n\r\n            const myPost = {\r\n                id: id,\r\n                comment: comment,\r\n                lastInspection: lastInspection,\r\n                status: status,\r\n                owner: JSON.parse(localStorage.getItem('user')).Id\r\n            };\r\n\r\n            fetch('http://localhost:3003/addInspection', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Host': 'http://localhost:3003/addInspection',\r\n                    'Origin': 'http://localhost:3000/'\r\n                },\r\n                body: JSON.stringify(myPost)\r\n            })\r\n                .then((res) => {\r\n                    if (!res.ok) {\r\n                        window.alert(\"ERROR: Inspection not added!\");\r\n                    } else {\r\n                        window.alert(\"New inspection added!\");\r\n                        ReactDOM.render(\r\n                            <Toolbox/>,\r\n                            document.getElementById('Body'));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({[nam]: val});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Add\">\r\n                <h1 className=\"Add-h1\">Add new inspection</h1>\r\n                <form className=\"Add-form\" onSubmit={this.mySubmitHandler}>\r\n                    <label htmlFor=\"toolIn\" className=\"Add-lab\">Choose tool:</label>\r\n                    <select className=\"Add-in\"\r\n                            id=\"toolIn\"\r\n                            name=\"tool\"\r\n                            onChange={this.myChangeHandler}>\r\n                        {this.state.items.map(item => (\r\n                            <option value={item.id}>{item.id} {item.producer} {item.model}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div className=\"lastInspectionField\">\r\n                        <label htmlFor=\"lastInspectionIn\" className=\"Add-lab\">Date of inspection (date format yyyy-MM-dd):</label>\r\n                        <input className=\"Add-in\"\r\n                               id=\"lastInspectionIn\"\r\n                               name=\"lastInspection\"\r\n                               type=\"text\"\r\n                               minLength=\"8\"\r\n                               pattern=\"20[0-9][0-9]-[0-9][0-9]-[0-3][0-9]\"\r\n                               onChange={this.myChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"commentField\">\r\n                        <label htmlFor=\"commentIn\" className=\"Add-lab\">Comment:</label>\r\n                        <input className=\"Add-in\"\r\n                               id=\"commentIn\"\r\n                               name=\"comment\"\r\n                               type=\"text\"\r\n                               onChange={this.myChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <label htmlFor=\"statusIn\" className=\"Add-lab\">Status:</label>\r\n                    <select className=\"Add-in\"\r\n                            id=\"statusIn\"\r\n                            name=\"status\"\r\n                            onChange={this.myChangeHandler}>\r\n                        <option value=\"Ok\">Ok</option>\r\n                        <option value=\"Requires Attention\">Requires Attention</option>\r\n                        <option value=\"Broken\">Broken</option>\r\n                    </select>\r\n\r\n\r\n                    <input className=\"Add-in-submit\" id=\"addIn\" type=\"submit\" value=\"Add\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddInspection;"]},"metadata":{},"sourceType":"module"}